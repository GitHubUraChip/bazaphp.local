1 Опен сервер скачал и установил и настроил как в уроке.
22октября 2019 года

2 Добавил в закладки мануал по Пхп.
23окт 2019


3 Изучил фун-ю  var_dump();  и  
главу "Арифметические операторы"
fi2.php.net/manual/ru/language.operators.arithmetic.ph


Выполнил урок "Типы":
24окт 2019


4.Ответ на вопрос "дайте ответ что же явл-я.значением выражения присваивания? 

1. echo($a=2);

2. $x = ($y=12)-8; 

Кратко:

Базовый оператор присваивания обозначается как "=".
1.ответ 2  ... число два.  Присвоеное значение Два является значением оператора =
2.В примере  2 базовых оператора присваивания.Мой ответ:тут два присваивания для $x число 4 и $y  12  .(но это не точно).. число четыре и двенадцать.  Переменой Икс $x присвоили  значение 4 а переменой Игрек $y присвоено 12.
($y=12)-8 это выражение и его значение 4. А $x присваиваем значение 4.

Подробно:
Равно(=) Является знаком присваивания.

1.Это выражение =2 его результат 2
echo($a=2);
переменой $a присваиваем значение 2.

2.Это выражение ($y=12)-8 его результат 4

Мы переменой Игрек($y) присваиваем значение 12 и потом применили  арифметическую операцию(вычитание -8 )......
$x = ($y=12)-8; echo $x;
$x присваиваем значение 4.

Напомню что $a и $x это имена переменных. 
А Равно(=) - это знак 'присваивания'(напомню про Оператор присваивания).



// 5 пункт. Изучаем выражения и обьясняем их.
//Операторы сравнения https://www.php.net/manual/ru/language.operators.comparison.php

Эти выражения примут значения или Тру или Фолс.Попытаемся их обьяснить.(Но это не точно)
----------------
1. пример
1 == 1.0 
Сравниваем число и число ,но не сравниваем типы
Выражение не имеет тот же тип:
1 -это число а тип Инт INT
1.0 -это тоже число но с плавающей точкой ФЛОАТ тип float
Преобразует в числа так 1==1  и сервер ответит //bool(true), выражение верно.
-----------------

2. пример
1 === 1.0
Сравниваем 2 числа: один(тип int) и одна целая ноль десятых(тип float).
Выражение не имеет тот же тип

1 - это тип int 
а 1.0 - это тип float
Ответ сервера bool(false), так как сравниваются еще и типы и они не Тру.

-------------------------

3. пример
'02' == 2
Оператором сравнения Равно == Сравниваем Строку '02' с Числом 2 .
Напомню- то что в кавычках это Строка.
Каждая строка будет преобразована в число и сравниваться они будут как числа ,после преобразования выражение будет таким: 2==2. 
ну я понял что строка '02' преобразуется в число 2.(но это не точно,,,,шутка)

------------------------
4. Пример
 '02' === 2
Сравниваем строку с числом.
Преобразование типов не происходит при использовании === или !== так как в этом случае кроме самих значений сравниваются еще и типы.
Преобразование типов не происходит при использовании === , то есть выражение '02' === 2  не преобразуется в выражение 2===2 а сразу сравниваются их Типы - в даном примере : строки и число (Стринг и инт). (но это не точно)
=== Это точное сравнение. Выражение не имеет тот же тип.
Тип String-строка не равен типу  Int-число.
'02' - это   строка '02' с типом стринг 
 2 - это число и ее тип Инт. 
  Ответ сервера : bool(false)  , так как === это более точное сравнение ,тут сравниваются их типы Стринг и Инт (но это не точно)
------------------------------

5. Пример
'02' == '2'
Сравниваем две строки.Или можем сказать сравниваем строка-строка.
Каждая строка будет преобразована в число, и сравниваться они будут как числа.
После преобразования выражение будет таким 2==2.
В этом примере все строки '02' и '2' преобразуются в числа 2 и 2 и тип меняется уже со "строки на число".
Втвет сервера bool(true) , так как выражение верно и 2 равно 2.

------------------------------
6.Пункт.
Обьясните это выражение:
$x = true xor true;
var_dump($x);
---------------------

Обьясняю : ответ сервера //bool(true)
 Почему Тру а не Фолс?
 Потому что мы переменой Икс присваиваем значение ТРУ и оператор равно всегда приоритетнее чем XOR.


Разбор кода:
Логический оператор XOR 
Название XOR   -Исключающее или	
Результат XOR  -TRUE, если $a, или $b TRUE, но не оба.Если оба то будет фолс.

Дело в том, что присвоение (=) - это тоже оператор, часть выражения
И он имеет больший приоритет, чем xor.
То есть приведенный выше код был аналогичен следующему:

($x = true) xor true;

Решить проблему можно было самостоятельной расстановкой скобок. Вот так:
$x = (true xor true);

Почитал про операторы тут.
https://www.php.net/manual/ru/language.operators.logical.php





